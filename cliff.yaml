changelog:
  header: |-
    # Changelog

  body: |-
    {% if version %}
        ## [{{ version | trim_start_matches(pat="v") }}](https://github.com/schlauerlauer/alertmanager-webhook-signal/releases/tag/{{ version | trim_start_matches(pat="v") }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}
        ## unreleased
    {% endif %}
    {%- for group, commits in commits | group_by(attribute="group") %}
        ### {{ group | upper_first }}

        {% for commit in commits -%}
            - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }}
        {% endfor -%}
    {% endfor %}

  trim: true # remove the leading and trailing whitespace from the template
  footer:

git:
  conventional_commits: true # parse the commits based on https://www.conventionalcommits.org
  filter_unconventional: true # filter out the commits that are not conventional
  split_commits: false # process each line of a commit as an individual commit
  # regex for preprocessing the commit messages
  commit_preprocessors:
    # replace issue numbers
    - pattern: \\((\\w+\\s)?#([0-9]+)\\)
      replace: ([#${2}](https://github.com/schlauerlauer/alertmanager-webhook-signal/issues/${2}))

  # regex for parsing and grouping commits
  commit_parsers:
    - message: "^feat"
      group: "Features"
    - message: "^fix"
      group: "Bug Fixes"
    - message: "^doc"
      group: "Documentation"
    - message: "^perf"
      group: "Performance"
    - message: "^refactor"
      group: "Refactor"
    - message: "^style"
      group: "Styling"
    - message: "^test"
      group: "Testing"
    - message: "^chore\\(release\\): prepare for"
      skip: true
    - message: "^chore"
      group: "Miscellaneous Tasks"
    - body: ".*security"
      group: "Security"
  protect_breaking_commits: true # protect breaking changes from being skipped due to matching a skipping commit_parser
  filter_commits: true # filter out the commits that are not matched by commit parsers
  tag_pattern: "[0-9]*" # glob pattern for matching git tags
  topo_order: false # sort the tags topologically
  sort_commits: "oldest" # sort the commits inside sections by oldest/newest order
  # limit_commits = 42 # limit the number of commits included in the changelog
